{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/Terminal/ICommandHandler.ts","../src/Terminal/ITerminal.ts","../src/Prompt/IPrompt.ts","../src/Command/ITerminalCommand.ts","../src/Command/ICommandLineParser.ts","../src/Terminal/Terminal.ts","../src/Terminal/SimpleTerminal.ts","../src/File/IFileNode.ts","../src/FileSystem/IFileSystem.ts","../src/Prompt/PromptWithCwd.ts","../src/File/IFileNodeCollection.ts","../src/File/DirNode.ts","../src/File/IVoidCallbackFunction.ts","../src/File/ExecutableFileNode.ts","../src/File/TextFileNode.ts","../src/FileSystem/InMemoryFileSystem.ts","../src/files.ts","../src/Command/ICommand.ts","../src/Command/ICommandCollection.ts","../src/Command/Help.ts","../src/Command/Ls.ts","../src/Command/BuiltInCommands.ts","../src/Command/CommandLineParser.ts","../src/bootstrap.ts"],"names":[],"mappings":"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","sourcesContent":["export default interface ICommandHandler {\n    (input: string) : void;\n}","import ICommandHandler from \"./ICommandHandler\";\n\nexport default interface ITerminal {\n    print(text: string, className?: string): void;\n    printLn(text: string, className?: string): void;\n    input(commandHandler: ICommandHandler): void;\n    renderTo(node: HTMLElement): void;\n    start(): void;\n}\n","export default interface IPrompt {\n    getPrompt(): string;\n}\n","import ITerminal from \"../Terminal/ITerminal\";\n\nexport default interface ITerminalCommand {\n    (terminal: ITerminal): void;\n}\n","import ITerminalCommand from \"./ITerminalCommand\";\n\nexport default interface ICommandLineParser {\n    handle(input: string) : ITerminalCommand;\n}","import ICommandHandler from \"./ICommandHandler\";\n\nexport default class Terminal {\n\n    public html: HTMLElement;\n    private innerWindow: HTMLElement;\n    private output: HTMLElement;\n    private inputLine: HTMLElement;\n    private cursor: HTMLElement;\n    private inputElement: HTMLElement;\n\n    private firstPrompt = true;\n\n    constructor() {\n        this.html = document.createElement('div');\n        this.html.className = 'Terminal';\n\n        \n\t\tthis.innerWindow = document.createElement('div')\n\t\tthis.output = document.createElement('p')\n\t\tthis.inputLine = document.createElement('span') //the span element where the users input is put\n\t\tthis.cursor = document.createElement('span')\n        this.inputElement = document.createElement('p') //the full element administering the user input, including cursor\n        \n\t\tthis.inputElement.appendChild(this.inputLine)\n\t\tthis.inputElement.appendChild(this.cursor)\n\t\tthis.innerWindow.appendChild(this.output)\n\t\tthis.innerWindow.appendChild(this.inputElement)\n\t\tthis.html.appendChild(this.innerWindow)\n\n\t\tthis.setBackgroundColor('black')\n\t\tthis.setTextColor('white')\n\t\tthis.setTextSize('1em')\n\t\tthis.setWidth('100%')\n\t\tthis.setHeight('100%')\n\n\t\tthis.html.style.fontFamily = 'Monaco, Courier'\n\t\tthis.html.style.margin = '0'\n\t\tthis.innerWindow.style.padding = '10px'\n\t\tthis.inputElement.style.margin = '0'\n        this.output.style.margin = '0'\n        this.output.style.display = 'inline';\n\t\tthis.cursor.style.background = 'white'\n\t\tthis.cursor.innerHTML = 'C' //put something in the cursor..\n\t\tthis.cursor.style.display = 'none' //then hide it\n\t\tthis.inputElement.style.display = 'none'\n    }\n\n    private makeNewLine = function(message: string, className?: string) {\n        const newLine = document.createElement('div');\n        if (className) {\n            newLine.className = className;\n        }\n        newLine.textContent = message;\n        return newLine;\n    }\n\n    public print(message: string, className?: string) {\n        const newLine = this.makeNewLine(message, className);\n        newLine.style.display = 'inline';\n        this.output.appendChild(newLine)\n    }\n\n    public printLn(message: string, className?: string) {\n        const newLine = this.makeNewLine(message, className);\n        this.output.appendChild(newLine)\n    }\n\n    private fireCursorInterval(inputField: HTMLElement) {\n        setTimeout(() => {\n            if (inputField.parentElement) {\n                this.cursor.style.visibility = \n                    this.cursor.style.visibility === 'visible'\n                    ? 'hidden' \n                    : 'visible'\n                this.fireCursorInterval(inputField);\n            }\n        }, 500);\n    }\n\n    public input(message: string, callback: ICommandHandler) {\n        const inputField = document.createElement('input');\n\t\tinputField.style.position = 'absolute'\n\t\tinputField.style.zIndex = '-100'\n\t\tinputField.style.outline = 'none'\n\t\tinputField.style.border = 'none'\n\t\tinputField.style.opacity = '0'\n\t\tinputField.style.fontSize = '0.2em'\n\n\t\tthis.inputLine.textContent = ''\n\t\tthis.inputElement.style.display = 'inline-block'\n\t\tthis.html.appendChild(inputField)\n\n        this.fireCursorInterval(inputField);\n\n        if (message.length) {\n            this.print(message, 'prompt');\n        }\n\n        inputField.onblur = () => {\n            this.cursor.style.display = 'none';\n        }\n\n        inputField.onfocus = () => {\n            inputField.value = this.inputLine.textContent;\n            this.cursor.style.display = 'inline';\n        }\n\n        this.html.onclick = () => {\n            inputField.focus();\n        }\n\n        inputField.onkeydown = (e) => {\n\t\t\tif (e.which === 37 || e.which === 39 || e.which === 38 || e.which === 40 || e.which === 9) {\n\t\t\t\te.preventDefault()\n\t\t\t} else if (e.which !== 13) {\n\t\t\t\tsetTimeout(()  => {\n\t\t\t\t\tthis.inputLine.textContent = inputField.value\n\t\t\t\t}, 1)\n\t\t\t}\n        }\n\n        inputField.onkeyup = (e) => {\n            if (e.which === 13) {\n                this.inputElement.style.display = 'none'\n                const inputValue = inputField.value;\n                this.print(inputValue);\n                this.html.removeChild(inputField);\n                if (typeof(callback) === 'function') {\n                    callback(inputValue);\n                }\n            }\n        }\n\n        if (this.firstPrompt) {\n            this.firstPrompt = false;\n            setTimeout(() => {\n                inputField.focus()\n            }, 50);\n        } else {\n            inputField.focus()\n        }\n    }\n\n    public clear() {\n        this.output.innerHTML = '';\n    }\n\n\n    public setTextSize = function (size: string) {\n        this.output.style.fontSize = size\n        this.inputElement.style.fontSize = size\n    }\n\n    public setTextColor = function (col: string) {\n        this.html.style.color = col\n        this.cursor.style.background = col\n    }\n\n    public setBackgroundColor = function (col: string) {\n        this.html.style.background = col\n    }\n\n    public setWidth = function (width: string) {\n        this.html.style.width = width\n    }\n\n    public setHeight = function (height: string) {\n        this.html.style.height = height\n    }\n\n}\n","import ITerminal from \"./ITerminal\";\nimport IPrompt from \"../Prompt/IPrompt\";\nimport ICommandHandler from \"./ICommandHandler\";\nimport ICommandLineParser from \"../Command/ICommandLineParser\";\nimport Terminal from \"./Terminal\";\n\nexport default class SimpleTerminal implements ITerminal {\n    private prompt: IPrompt;\n    private terminal: Terminal;\n    private commandLineParser: ICommandLineParser;\n\n    private errorCount = 0;\n    private maxErrorCount = 100;\n\n    constructor(\n        prompt: IPrompt, \n        commandLineParser: ICommandLineParser,\n        terminal: any\n    ) {\n        this.prompt = prompt\n        this.terminal = terminal;\n        this.commandLineParser = commandLineParser;\n    }\n\n    print(text: string, className?: string) : void {\n        this.terminal.print(text, className);\n    }\n\n    printLn(text: string, className?: string) : void {\n        this.terminal.printLn(text, className);\n    }\n\n    input(commandHandler: ICommandHandler) : void {\n        this.terminal.input(\n            this.prompt.getPrompt(),\n            commandHandler\n        );\n    }\n\n    renderTo(node: HTMLElement) : void {\n        node.appendChild(this.terminal.html);\n    }\n\n    private handleCommandLine(input?: string) : void {\n        try {\n            if (input !== null && input.trim() !== '') {\n                const executableCommand = this.commandLineParser.handle(input);\n                executableCommand(this);\n            }\n            this.printLn('');\n            this.input(this.handleCommandLine.bind(this));\n        } catch (e) {\n            this.printLn('');\n            this.printLn(e.message, 'error');\n            console.debug(e);\n            \n            this.errorCount++;\n            \n            if (this.errorCount < this.maxErrorCount) {\n                this.handleCommandLine(null);\n            } else {\n                console.debug('Too many errors, aborting')\n            }\n        }\n    }\n    \n    start() : void {\n        this.handleCommandLine(null);\n    }\n}\n","export default interface IFileNode {\n    isDir: boolean;\n    isFile: boolean;\n    isExecutable: boolean;\n    name: string;\n    execute(): void;\n    getContents(): any;\n}\n","import IFileNode from '../File/IFileNode';\n\nexport default interface IFileSystem {\n    /**\n     * get current working directory\n     */\n    getCwd(): string;\n\n    /**\n     * set current working directory to path\n     * @param path \n     */\n    setCwd(path: string): void;\n\n    /**\n     * get file (or directory) under path\n     */\n    getFile(path: string): IFileNode;\n\n    /**\n     * check if specified path exists in file system\n     * @param path path to check\n     */\n    exists(path: string): boolean;\n\n    /**\n     * remove path from filesystem\n     * @param path path to remove\n     */\n    remove(path: string): void;\n\n    /**\n     * add file to filesystem\n     * @param path where to add new file\n     * @param file new file / directory\n     */\n    add(path: string, file: IFileNode): void;\n}\n","import IPrompt from  './IPrompt';\nimport IFileSystem from '../FileSystem/IFileSystem';\n\nexport default class PromptWithCwd implements IPrompt {\n\n    private prefix: string;\n    private suffix: string;\n    private fileSystem: IFileSystem;\n\n    constructor(fileSystem: IFileSystem, prefix: string, suffix: string) {\n        this.prefix = prefix;\n        this.suffix = suffix;\n        this.fileSystem = fileSystem;\n    }\n\n    getPrompt() : string {\n        return this.prefix + this.fileSystem.getCwd() + this.suffix;\n    }\n}\n","import IFileNode from \"./IFileNode\";\n\nexport default interface IFileNodeCollection {\n    [propName: string]: IFileNode;\n}\n","import IFileNode from \"./IFileNode\";\nimport IFileNodeCollection from \"./IFileNodeCollection\";\n\nexport default class DirNode implements IFileNode {\n    isDir: boolean = true;\n    isFile: boolean = false;\n    isExecutable: boolean = false;\n    name: string;\n    \n    private children: IFileNodeCollection;\n\n    constructor(name: string, children: IFileNodeCollection) {\n        this.name = name;\n        this.children = children;\n    }\n\n    execute() : void {\n        throw new Error('Not executable');\n    }\n\n    getContents(): Object {\n        return this.children;\n    }\n}\n","export default interface IVoidCallbackFunction {\n    (): void;\n}\n","import IVoidCallbackFunction from './IVoidCallbackFunction';\nimport IFileNode from \"./IFileNode\";\n\nexport default class ExecutableFileNode implements IFileNode {\n    isDir: boolean = false;\n    isFile: boolean = true;\n    isExecutable: boolean = true;\n    name: string;\n    \n    private callback: IVoidCallbackFunction;\n\n    constructor(name: string, callback: IVoidCallbackFunction) {\n        this.name = name;\n        this.callback = callback;\n    }\n\n    execute() : void  {\n        this.callback();\n    }\n\n    getContents(): IVoidCallbackFunction {\n        return this.callback;\n    }\n}\n","import IFileNode from \"./IFileNode\";\n\nexport default class TextFileNode implements IFileNode {\n    isDir: boolean = false;\n    isFile: boolean = true;\n    isExecutable: boolean = false;\n    name: string;\n    contents: string;    \n\n    constructor(name: string, contents: string) {\n        this.name = name;\n        this.contents = contents;\n    }\n\n    execute() : void  {\n        throw new Error('Not executable');\n    }\n\n    getContents(): string {\n        return this.contents;\n    }\n}\n","import IFileSystem from \"./IFileSystem\";\nimport IFileNode from \"../File/IFileNode\";\nimport DirNode from \"../File/DirNode\";\nimport ExecutableFileNode from \"../File/ExecutableFileNode\";\nimport TextFileNode from \"../File/TextFileNode\";\nimport IFileNodeCollection from \"../File/IFileNodeCollection\";\n\nexport default class InMemoryFileSystem implements IFileSystem {\n\n    private directorySeparator: string = '/';\n    private directories: Object;\n    private currentWorkingDirectory: Array<string>;\n\n    constructor(initalDirectoryStructure: Object = {}) {\n        this.directories = initalDirectoryStructure;\n        this.currentWorkingDirectory = [];\n    }\n\n    getCwd() : string {\n        return this.directorySeparator\n            + this.currentWorkingDirectory.join(this.directorySeparator);\n    }\n\n    setCwd(path: string) : void {\n        const canonicalPath = this.getCanonicalPath(path);\n        if (this.canonicalPathExists(canonicalPath)) {\n            const file = this.getFileByCanonicalPath(canonicalPath);\n            if (file.isDir) {\n                this.currentWorkingDirectory = canonicalPath;\n            } else {\n                throw Error(`${path} is not a directory`);\n            }\n        } else {\n            throw Error(`${path} does not exist`);\n        }\n    }\n\n    exists(path: string): boolean {\n        const canonicalPath = this.getCanonicalPath(path);\n        return this.canonicalPathExists(canonicalPath);\n    }\n\n    getFile(path: string): IFileNode {\n        const canonicalPath = this.getCanonicalPath(path);\n        return this.getFileByCanonicalPath(canonicalPath);\n    }\n\n    remove(path: string): void {\n        const canonicalPath = this.getCanonicalPath(path);\n        if (this.canonicalPathExists(canonicalPath)) {\n            let partialFileSystem = this.directories;\n            let lastChunk = null;\n            for (\n                let chunkPosition = 0; \n                chunkPosition < canonicalPath.length; \n                chunkPosition++\n            ) {\n                lastChunk = canonicalPath[chunkPosition];\n                if (chunkPosition < canonicalPath.length - 1) {\n                    partialFileSystem = partialFileSystem[lastChunk];\n                }\n            }\n            delete partialFileSystem[lastChunk];\n        }\n        throw new Error(`${path} does not exist`);\n    }\n\n    add(path: string, file: IFileNode): void {\n        const canonicalPath = this.getCanonicalPath(path);\n        const fileNode = this.getFileByCanonicalPath(canonicalPath);\n\n        if (!fileNode.isDir) {\n            throw new Error(`${path} is not a directory`);\n        }\n        if (this.canonicalPathExists([...canonicalPath, file.name])) {\n            throw new Error(`${file.name} already exists under ${path}`);\n        }\n\n        let partialFileSystem = this.directories;\n        for (const chunk of canonicalPath) {\n            partialFileSystem = partialFileSystem[chunk];\n        }\n        partialFileSystem[file.name] = file.getContents();\n    }\n\n    private canonicalPathExists(canonicalPath: Array<string>) : boolean {        \n        let partialFileSystem = this.directories;\n        for (const chunk of canonicalPath) {\n            partialFileSystem = partialFileSystem[chunk] || null;\n            if (partialFileSystem === null) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private getFileByCanonicalPath(canonicalPath: Array<string>) : IFileNode {\n        let partialFileSystem = this.directories;\n        let lastChunk = null;\n        for (\n            let chunkPosition = 0; \n            chunkPosition < canonicalPath.length; \n            chunkPosition++\n        ) {\n            lastChunk = canonicalPath[chunkPosition];\n            if (chunkPosition < canonicalPath.length - 1) {\n                partialFileSystem = partialFileSystem[lastChunk];\n            }\n        }\n\n        return this.getFileNodeFromFileSystem(\n            lastChunk, \n            partialFileSystem[lastChunk]\n        );\n    }\n\n    private getFileNodeFromFileSystem(name: string, fileData: any) : IFileNode {\n\n        if (name === null) {\n            name = '/'\n            fileData = this.directories;\n        }\n\n        switch (typeof fileData) {\n            case 'object': \n                return new DirNode(\n                    name, \n                    this.getDirectoryChildren(fileData)\n                );\n            case 'function':\n                return new ExecutableFileNode(name, fileData);\n            case 'string':\n                return new TextFileNode(name, fileData);                \n        }\n\n        throw new Error(`Unsupported object ${name} -> ${typeof fileData} in filesystem`);\n    }\n\n    private getDirectoryChildren(fileSystem: object) : IFileNodeCollection {\n        const children = {};\n\n        for (const child in fileSystem) {\n            children[child] = this.getFileNodeFromFileSystem(\n                child, \n                fileSystem[child]\n            );\n        }\n\n        return children;\n    }\n\n    private getCanonicalPath(path: string) : Array<string> {\n\n        if (path === null) {\n            path =  this.getCwd();\n        }\n\n        let canonicalPath = [];\n        if (path[0] !== this.directorySeparator) {\n            canonicalPath = [...this.currentWorkingDirectory];\n        }\n\n        const chunks = path.split(this.directorySeparator);\n        for (const chunk of chunks) {\n            switch (chunk) {\n                case '':\n                case '.':\n                    continue;\n                case '..':\n                    canonicalPath.pop();\n                    break;\n                default:\n                    canonicalPath.push(chunk);\n                    break;\n            }\n        }\n        \n        return canonicalPath;\n    }\n}\n","const openUrl = (url) => {\n    location.assign(url);\n}\n\nconst files = {\n    'www': {\n        'aerolit.pl': openUrl.bind(this, 'https://aerolit.pl/'),\n        'montypython': openUrl.bind(this, 'https://montypython.aerolit.pl/'),\n        'niemen': openUrl.bind(this, 'https://niemen.aerolit.pl/forum/'),\n        'osjan': openUrl.bind(this, 'https://osjan.aerolit.pl/'),\n    },\n    'sites': {\n        'hosted' : {\n            'pikantnasztuka': openUrl.bind(this, 'https://pikantnasztuka.aerolit.pl/'),\n            'dziwnonoc': openUrl.bind(this, 'https://dziwnonoc.aerolit.pl/')\n        },\n        'external' : {\n\n        }\n    },\n    'readme.txt': 'Hello world!',\n};\n\nexport default files;\n","import ITerminal from \"../Terminal/ITerminal\";\n\nexport default interface ICommand {\n    showHelp(terminal: ITerminal) : void;\n    execute(args: Array<string>, terminal: ITerminal) : void;\n}\n","import ICommand from \"./ICommand\";\n\nexport default interface ICommandCollection {\n    [propName: string]: ICommand;\n}\n","import ITerminal from \"../Terminal/ITerminal\";\nimport ICommand from \"./ICommand\";\nimport ICommandCollection from \"./ICommandCollection\";\n\nexport default class Help implements ICommand {\n    private commands: ICommandCollection;\n\n    constructor(commands: ICommandCollection) {\n        this.commands = commands;\n    }\n\n    showHelp(terminal: ITerminal) : void {\n        terminal.printLn('Built in help');\n        terminal.printLn('Usage:');\n        terminal.printLn(' help           - shows all commands');\n        terminal.printLn(' help <command> - shows help for command');\n    }\n\n    execute(args: Array<string>, terminal: ITerminal) : void {\n        if (args.length > 0) {\n            this.showCommandHelp(args[0], terminal);\n        } else {\n            this.showSelfHelp(terminal);\n        }\n    }\n\n    private showCommandHelp(commandName: string, terminal: ITerminal) {\n        const command = this.commands[commandName] || null;\n        if (command) {\n            command.showHelp(terminal);\n        } else {\n            terminal.printLn('Unknown command: ' + command);\n        }\n    }\n\n    private showSelfHelp(terminal: ITerminal) {\n        terminal.print('Commands: ')\n        for (const commandName in this.commands) {\n            terminal.print(commandName + ' ');\n        }\n        terminal.printLn('Type help <command name> for details');\n    }\n}\n","import ICommand from \"./ICommand\";\nimport ITerminal from \"../Terminal/ITerminal\";\nimport IFileSystem from \"../FileSystem/IFileSystem\";\nimport IFileNode from \"../File/IFileNode\";\nimport IFileNodeCollection from \"../File/IFileNodeCollection\";\n\nexport default class Ls implements ICommand {\n\n    private fileSystem : IFileSystem;\n\n    constructor(fileSystem: IFileSystem) {\n        this.fileSystem = fileSystem;\n    }\n\n    showHelp(terminal: ITerminal) : void {\n        terminal.printLn('ls - list contents of current directory');\n    }\n\n    execute(args: Array<string>, terminal: ITerminal) : void {\n\n        if (!this.fileSystem.exists(args[0] || null)) {\n            terminal.printLn(`ls: cannot access '${args[0]}': No such file or directory`)\n            return;\n        }\n\n        const file = this.fileSystem.getFile(args[0] || null);\n\n        if (file.isDir) {\n            const children = file.getContents() as IFileNodeCollection;\n            for (const child in children) {\n                this.printFileName(children[child], terminal);\n            }\n        } else {\n            this.printFileName(file, terminal);\n        }\n\n    }\n\n    private printFileName(file: IFileNode, terminal: ITerminal) : void {\n        terminal.printLn(file.name, this.getFileClassName(file));\n    }\n\n    private getFileClassName(file: IFileNode) : string {\n        if (file.isDir) {\n            return 'file-dir';\n        }\n        if (file.isExecutable) {\n            return 'file-executable';\n        }\n        return '';\n    }\n}\n","import ICommandCollection from \"./ICommandCollection\";\nimport Help from \"./Help\";\nimport ICommand from \"./ICommand\";\nimport Ls from \"./Ls\";\nimport IFileSystem from \"../FileSystem/IFileSystem\";\n\nexport default class BuiltInCommands implements ICommandCollection {\n    [propName: string]: ICommand;\n\n    constructor(fileSystem: IFileSystem) {\n        this.help = new Help(this);\n        this.ls = new Ls(fileSystem);\n    }\n}\n","import ICommandCollection from \"./ICommandCollection\";\nimport IFileSystem from \"../FileSystem/IFileSystem\";\nimport ITerminalCommand from \"./ITerminalCommand\";\nimport ITerminal from \"../Terminal/ITerminal\";\nimport ICommandLineParser from \"./ICommandLineParser\";\n\nexport default class CommandLineParser implements ICommandLineParser {\n    private commands: ICommandCollection;\n    private fileSystem: IFileSystem;\n\n    constructor(commands : ICommandCollection, fileSystem: IFileSystem) {\n        this.commands = commands;\n        this.fileSystem = fileSystem;\n    }\n\n    private isBuiltIn(command: string) : boolean {\n        return (this.commands[command] || null) !== null;\n    }\n\n    private isExecutable(command: string) : boolean {\n        return this.fileSystem.exists(command) &&\n            this.fileSystem.getFile(command).isExecutable\n    }\n\n    handle(input: string) : ITerminalCommand {\n\n        const chunks = input.split(/\\s+/);\n        const command = chunks.shift();\n        const args = [...chunks];\n\n        if (this.isBuiltIn(command)) {\n            return this.commands[command].execute.bind(\n                this.commands[command],\n                args\n            );\n        } else if (this.isExecutable(command)) {\n            return this.fileSystem.getFile(command).getContents().bind(\n                null,\n                args\n            )\n        } else {\n            return (terminal: ITerminal) => {\n                terminal.printLn(command + ': command not found');\n            }\n        }\n    }\n}\n","import SimpleTerminal from \"./Terminal/SimpleTerminal\";\nimport PromptWithCwd from \"./Prompt/PromptWithCwd\";\nimport InMemoryFileSystem from \"./FileSystem/InMemoryFileSystem\";\nimport files from \"./files\";\nimport BuiltInCommands from \"./Command/BuiltInCommands\";\nimport CommandLineParser from \"./Command/CommandLineParser\";\nimport Terminal from \"./Terminal/Terminal\";\n\nconst fileSystem = new InMemoryFileSystem(files);\n\nconst prompt = new PromptWithCwd(\n    fileSystem,\n    'aerolit.pl [',\n    ']$ '\n);\n\nconst commands = new BuiltInCommands(fileSystem);\nconst commandLineParser = new CommandLineParser(\n    commands, \n    fileSystem\n);\n\n// show terminal on screen\nconst terminal = new SimpleTerminal(\n    prompt,\n    commandLineParser,\n    new Terminal()\n);\n\nterminal.renderTo(document.getElementById('main'));\nterminal.start();\n"]}